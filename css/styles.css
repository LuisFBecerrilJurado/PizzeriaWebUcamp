.flex-column {
  display: flex;
  flex-direction: column;
}

container.flex-column label {
  text-align: center;
}

.flex-row {
  display: flex;
  flex-direction: row;
}

.flex-jc-sa {
  justify-content: space-around;
}

.grid-cols-2 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  /* grid-template-columns: 50% 1fr 1fr; */
}

button {
  max-width: 25%;
  max-height: 1.5rem;
}

.flex-center {
  display: flex;
  justify-content: center;
}

.flex-direction-column {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.flex-ai-center {
  align-items: center;
}

input {
  max-width: 25%;
  margin:auto;
}

/* From uiverse.io by @adamgiebl */
/* Hide the default checkbox */
.promocion input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
 }
 
 .promocion {
  display: block;
  position: relative;
  cursor: pointer;
  font-size: 20px;
  user-select: none;
 }
 
 /* Create a custom checkbox */
 .checkmark {
  position: relative;
  top: 0;
  left: 0;
  height: 1.3em;
  width: 1.3em;
  background-color: #ccc;
  transition: all 0.3s;
  border-radius: 5px;
 }
 
 /* When the checkbox is checked, add a blue background */
 .promocion input:checked ~ .checkmark {
  background-color: #47da99;
  animation: pop 0.5s;
  animation-direction: alternate;
 }
 
 /* Create the checkmark/indicator (hidden when not checked) */
 .checkmark:after {
  content: "";
  position: absolute;
  display: none;
 }
 
 /* Show the checkmark when checked */
 .promocion input:checked ~ .checkmark:after {
  display: block;
 }
 
 /* Style the checkmark/indicator */
 .promocion .checkmark:after {
  left: 0.45em;
  top: 0.25em;
  width: 0.25em;
  height: 0.5em;
  border: solid white;
  border-width: 0 0.15em 0.15em 0;
  transform: rotate(45deg);
 }
 
 @keyframes pop {
  0% {
   transform: scale(1);
  }
 
  50% {
   transform: scale(0.9);
  }
 
  100% {
   transform: scale(1);
  }
 }